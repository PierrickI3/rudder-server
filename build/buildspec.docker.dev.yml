version: 0.2

phases:
  install:
    runtime-versions:
      golang: 1.13
  pre_build:
    commands:
      - docker login --username rudderlabs --password $DOCKERHUB_PASSWORD
  build:
    commands:
      - export GO111MODULE=on
      - DATE=$(date "+%F,%T")
      - VERSION=$(echo $GIT_BRANCH | tr "/" .)
      - CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -installsuffix cgo -ldflags="-s -w -X main.version=$VERSION -X main.commit=$CODEBUILD_RESOLVED_SOURCE_VERSION -X main.buildDate=$DATE -X main.builtBy=codebuild-$CODEBUILD_BUILD_ID "

      - echo build Docker image on `date`
      - docker build -t rudderlabs/develop-rudder-server:$VERSION -f build/Dockerfile-aws .

      - sed -i -e 's/^CONFIG_BACKEND_URL=.*$/CONFIG_BACKEND_URL=https:\/\/api.rudderlabs.com/' build/docker.env
      - go run tests/helpers/tomlmerge/toml_merge.go config/config.toml tests/e2e/config_overrides.toml > tests/e2e/config.toml
      - sed -i -e 's/^CONFIG_PATH=.*$/CONFIG_PATH=\/app\/tests\/e2e\/config.toml/' build/docker.env
      - cat build/docker.env
      - cat tests/e2e/config.toml
      - docker-compose -f build/docker-compose.codebuild.yml up -d
      - docker-compose -f build/docker-compose.codebuild.yml exec -T backend sh -c "CGO_ENABLED=0 ginkgo tests/e2e"
  post_build:
    commands:
      - echo build Docker image complete `date`
      - echo push latest Docker images to docker hub...
      - docker push rudderlabs/develop-rudder-server:$VERSION
artifacts:
  files:
    - "**/*"
